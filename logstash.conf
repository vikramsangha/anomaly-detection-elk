input {
  file {
    path => ["/usr/share/logstash/logs/test-automation-logs-*.ndjson"]
    start_position => "beginning"
    sincedb_path => "NUL"
    codec => json
  }
}

filter {
  # Parse timestamp field - supports both ISO8601 and epoch_ms
  date {
    match => ["timestamp", "ISO8601", "UNIX_MS"]
    target => "@timestamp"
  }

  # If timestamp is missing or invalid, fallback to @timestamp
  if ![timestamp] {
    mutate {
      add_field => { "timestamp" => "%{@timestamp}" }
    }
  }

  # Convert 'timestamp' string back to date type for ES mapping
  ruby {
    code => '
      require "time"
      begin
        event.set("timestamp", event.get("timestamp").to_time.to_i * 1000)
      rescue
        event.set("timestamp", event.get("@timestamp").to_i * 1000)
      end
    '
  }

  # Convert time field to float for ML mean calculations
  mutate {
    convert => { "time" => "float" }
  }

  # Remove unused fields to keep ES index clean
  mutate {
    remove_field => ["@version", "event", "host", "log", "message", "agent", "ecs"]
  }
}

output {
  stdout { codec => rubydebug }

  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "test-logs"
    template => "/usr/share/logstash/templates/test-logs-template.json"
    template_name => "test-logs"
    template_overwrite => true
  }
}
