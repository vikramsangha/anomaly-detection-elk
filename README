# ðŸš€ Log Anomaly Detection Project

This project provides a system for detecting anomalies in **test automation logs** using the **Elastic Stack** (Elasticsearch, Logstash, Kibana) and a custom Python script.

---

## ðŸ“‚ Project Structure

```text
.
â”œâ”€â”€ anomaly_report.py        # Python script for analyzing anomaly detection results
â”œâ”€â”€ docker-compose.yml       # Docker Compose file to set up Elastic Stack
â”œâ”€â”€ logstash.conf            # Logstash configuration file to process log data
â”œâ”€â”€ logs/                    # Example log files (NDJSON format: test-automation-logs-YYYYMMDD.ndjson)
â”œâ”€â”€ reports/                 # Generated reports (with a README)
â”œâ”€â”€ scripts/                 # Helper scripts
â”‚   â”œâ”€â”€ create-ml-job.sh     # Script to create the ML job in Elasticsearch
â”‚   â””â”€â”€ init-license.sh      # Script to initialize the Elastic license
â””â”€â”€ templates/               # Templates
    â””â”€â”€ test-logs-template.json  # Elasticsearch index template
```

---

## ðŸ›  Requirements

- [Docker](https://docs.docker.com/get-docker/) and Docker Compose
- Basic knowledge of the **Elastic Stack**

---

## ðŸš¦ Usage

### 1. Start the Elastic Stack
```bash
docker-compose up -d
```

### 2. Visualize in Kibana
Open [http://localhost:5601](http://localhost:5601) in your browser to explore the data and ML results.

---

- Add CI/CD integration for automated anomaly detection  
- Enhance visualization dashboards in Kibana  
- Extend support for multiple log formats  

---
